-- 1. GetVietnameseCoffeeTypes
I found some issue with GetVietnameseCoffeeTypes method
First, it is not generic -> We should add a parameter countryName & rename method to GetCoffeeTypesByCountryName
Second, the return type IEnumerable make client confuses -> We should use IList or IQueryable.
IList: return data in memory
IQueryable: return a query

-- 2. GetAmericanCoffeePrice
Method GetAmericanCoffeePrice same issue with first one method & rename method to GetCoffeePriceByCountryName
It has performance issue with ToList(), because we take 1 record with 1 property Price
-> We should use Select 1 property Price then use FirstOrDefault, so that we can optimize the query

-- 3. SearchAustralianCoffeeTypes
The parameter user, we only use UserId, we should change parameter to userId
This method is not generic -> We should add a parameter countryName
It has performance issue, because it call private method GetAllCoffeeTypes that gets all data in memory
-> We should update return type of GetAllCoffeeTypes method to IQueryable and remove ToList()

Entity UserCoffeePreference is not generic also
-> We should make it generic, change property name AustralianCoffeeSearch to CoffeeSearch and new property ContryName.
And then we update condition SingleOrDefault with ContryName.

Shouldn't use variable name not clear -> We should change u to coffeePreference and check null it before we use
In this case, if coffeePreference is null we should add new UserCoffeePreference.

-- 4. IncreasePrices
We should validate parameter before execute
We should get all exist data in DB before use in foreach
Cast value may lost data or throw exception, because double max value is greater than decimal max value
Move _context.SaveChanges() out foreach loop

------------------------------------------------------
-- có 2 user search cùng lúc thì làm sao số lượng search van đúng.
--- quna trong IEnumable (k ToList() , sao Where roi ToList(), thì call
cau try van van co Where AsQueryable ( check voi SQL profiler)